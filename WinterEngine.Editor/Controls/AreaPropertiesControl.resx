<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxTileset.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBoxTileset.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>