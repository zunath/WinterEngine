//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace WinterEngine.Toolset.DataLayer.Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WinterContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WinterContext object using the connection string found in the 'WinterContext' section of the application configuration file.
        /// </summary>
        public WinterContext() : base("name=WinterContext", "WinterContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WinterContext object.
        /// </summary>
        public WinterContext(string connectionString) : base(connectionString, "WinterContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WinterContext object.
        /// </summary>
        public WinterContext(EntityConnection connection) : base(connection, "WinterContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Area> Areas
        {
            get
            {
                if ((_Areas == null))
                {
                    _Areas = base.CreateObjectSet<Area>("Areas");
                }
                return _Areas;
            }
        }
        private ObjectSet<Area> _Areas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Creature> Creatures
        {
            get
            {
                if ((_Creatures == null))
                {
                    _Creatures = base.CreateObjectSet<Creature>("Creatures");
                }
                return _Creatures;
            }
        }
        private ObjectSet<Creature> _Creatures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Placeable> Placeables
        {
            get
            {
                if ((_Placeables == null))
                {
                    _Placeables = base.CreateObjectSet<Placeable>("Placeables");
                }
                return _Placeables;
            }
        }
        private ObjectSet<Placeable> _Placeables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceCategory> ResourceCategories
        {
            get
            {
                if ((_ResourceCategories == null))
                {
                    _ResourceCategories = base.CreateObjectSet<ResourceCategory>("ResourceCategories");
                }
                return _ResourceCategories;
            }
        }
        private ObjectSet<ResourceCategory> _ResourceCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceType> ResourceTypes
        {
            get
            {
                if ((_ResourceTypes == null))
                {
                    _ResourceTypes = base.CreateObjectSet<ResourceType>("ResourceTypes");
                }
                return _ResourceTypes;
            }
        }
        private ObjectSet<ResourceType> _ResourceTypes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Areas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAreas(Area area)
        {
            base.AddObject("Areas", area);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Creatures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCreatures(Creature creature)
        {
            base.AddObject("Creatures", creature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Placeables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlaceables(Placeable placeable)
        {
            base.AddObject("Placeables", placeable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceCategories(ResourceCategory resourceCategory)
        {
            base.AddObject("ResourceCategories", resourceCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceTypes(ResourceType resourceType)
        {
            base.AddObject("ResourceTypes", resourceType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WinterEngineDatabaseModel", Name="Area")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Area : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Area object.
        /// </summary>
        /// <param name="resref">Initial value of the Resref property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="tag">Initial value of the Tag property.</param>
        /// <param name="resourceCategoryID">Initial value of the ResourceCategoryID property.</param>
        public static Area CreateArea(global::System.String resref, global::System.String name, global::System.String tag, global::System.Int64 resourceCategoryID)
        {
            Area area = new Area();
            area.Resref = resref;
            area.Name = name;
            area.Tag = tag;
            area.ResourceCategoryID = resourceCategoryID;
            return area;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Resref
        {
            get
            {
                return _Resref;
            }
            set
            {
                if (_Resref != value)
                {
                    OnResrefChanging(value);
                    ReportPropertyChanging("Resref");
                    _Resref = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Resref");
                    OnResrefChanged();
                }
            }
        }
        private global::System.String _Resref;
        partial void OnResrefChanging(global::System.String value);
        partial void OnResrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ResourceCategoryID
        {
            get
            {
                return _ResourceCategoryID;
            }
            set
            {
                OnResourceCategoryIDChanging(value);
                ReportPropertyChanging("ResourceCategoryID");
                _ResourceCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceCategoryID");
                OnResourceCategoryIDChanged();
            }
        }
        private global::System.Int64 _ResourceCategoryID;
        partial void OnResourceCategoryIDChanging(global::System.Int64 value);
        partial void OnResourceCategoryIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WinterEngineDatabaseModel", Name="Creature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Creature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Creature object.
        /// </summary>
        /// <param name="resref">Initial value of the Resref property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="tag">Initial value of the Tag property.</param>
        /// <param name="resourceCategoryID">Initial value of the ResourceCategoryID property.</param>
        public static Creature CreateCreature(global::System.String resref, global::System.String name, global::System.String tag, global::System.Int64 resourceCategoryID)
        {
            Creature creature = new Creature();
            creature.Resref = resref;
            creature.Name = name;
            creature.Tag = tag;
            creature.ResourceCategoryID = resourceCategoryID;
            return creature;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Resref
        {
            get
            {
                return _Resref;
            }
            set
            {
                if (_Resref != value)
                {
                    OnResrefChanging(value);
                    ReportPropertyChanging("Resref");
                    _Resref = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Resref");
                    OnResrefChanged();
                }
            }
        }
        private global::System.String _Resref;
        partial void OnResrefChanging(global::System.String value);
        partial void OnResrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ResourceCategoryID
        {
            get
            {
                return _ResourceCategoryID;
            }
            set
            {
                OnResourceCategoryIDChanging(value);
                ReportPropertyChanging("ResourceCategoryID");
                _ResourceCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceCategoryID");
                OnResourceCategoryIDChanged();
            }
        }
        private global::System.Int64 _ResourceCategoryID;
        partial void OnResourceCategoryIDChanging(global::System.Int64 value);
        partial void OnResourceCategoryIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WinterEngineDatabaseModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="resref">Initial value of the Resref property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="tag">Initial value of the Tag property.</param>
        /// <param name="resourceCategoryID">Initial value of the ResourceCategoryID property.</param>
        public static Item CreateItem(global::System.String resref, global::System.String name, global::System.String tag, global::System.Int64 resourceCategoryID)
        {
            Item item = new Item();
            item.Resref = resref;
            item.Name = name;
            item.Tag = tag;
            item.ResourceCategoryID = resourceCategoryID;
            return item;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Resref
        {
            get
            {
                return _Resref;
            }
            set
            {
                if (_Resref != value)
                {
                    OnResrefChanging(value);
                    ReportPropertyChanging("Resref");
                    _Resref = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Resref");
                    OnResrefChanged();
                }
            }
        }
        private global::System.String _Resref;
        partial void OnResrefChanging(global::System.String value);
        partial void OnResrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ResourceCategoryID
        {
            get
            {
                return _ResourceCategoryID;
            }
            set
            {
                OnResourceCategoryIDChanging(value);
                ReportPropertyChanging("ResourceCategoryID");
                _ResourceCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceCategoryID");
                OnResourceCategoryIDChanged();
            }
        }
        private global::System.Int64 _ResourceCategoryID;
        partial void OnResourceCategoryIDChanging(global::System.Int64 value);
        partial void OnResourceCategoryIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WinterEngineDatabaseModel", Name="Placeable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Placeable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Placeable object.
        /// </summary>
        /// <param name="resref">Initial value of the Resref property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="tag">Initial value of the Tag property.</param>
        /// <param name="resourceCategoryID">Initial value of the ResourceCategoryID property.</param>
        public static Placeable CreatePlaceable(global::System.String resref, global::System.String name, global::System.String tag, global::System.Int64 resourceCategoryID)
        {
            Placeable placeable = new Placeable();
            placeable.Resref = resref;
            placeable.Name = name;
            placeable.Tag = tag;
            placeable.ResourceCategoryID = resourceCategoryID;
            return placeable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Resref
        {
            get
            {
                return _Resref;
            }
            set
            {
                if (_Resref != value)
                {
                    OnResrefChanging(value);
                    ReportPropertyChanging("Resref");
                    _Resref = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Resref");
                    OnResrefChanged();
                }
            }
        }
        private global::System.String _Resref;
        partial void OnResrefChanging(global::System.String value);
        partial void OnResrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ResourceCategoryID
        {
            get
            {
                return _ResourceCategoryID;
            }
            set
            {
                OnResourceCategoryIDChanging(value);
                ReportPropertyChanging("ResourceCategoryID");
                _ResourceCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceCategoryID");
                OnResourceCategoryIDChanged();
            }
        }
        private global::System.Int64 _ResourceCategoryID;
        partial void OnResourceCategoryIDChanging(global::System.Int64 value);
        partial void OnResourceCategoryIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WinterEngineDatabaseModel", Name="ResourceCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceCategory object.
        /// </summary>
        /// <param name="resourceCategoryID">Initial value of the ResourceCategoryID property.</param>
        /// <param name="resourceTypeID">Initial value of the ResourceTypeID property.</param>
        /// <param name="resourceName">Initial value of the ResourceName property.</param>
        public static ResourceCategory CreateResourceCategory(global::System.Int64 resourceCategoryID, global::System.Int64 resourceTypeID, global::System.String resourceName)
        {
            ResourceCategory resourceCategory = new ResourceCategory();
            resourceCategory.ResourceCategoryID = resourceCategoryID;
            resourceCategory.ResourceTypeID = resourceTypeID;
            resourceCategory.ResourceName = resourceName;
            return resourceCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ResourceCategoryID
        {
            get
            {
                return _ResourceCategoryID;
            }
            set
            {
                if (_ResourceCategoryID != value)
                {
                    OnResourceCategoryIDChanging(value);
                    ReportPropertyChanging("ResourceCategoryID");
                    _ResourceCategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceCategoryID");
                    OnResourceCategoryIDChanged();
                }
            }
        }
        private global::System.Int64 _ResourceCategoryID;
        partial void OnResourceCategoryIDChanging(global::System.Int64 value);
        partial void OnResourceCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ResourceTypeID
        {
            get
            {
                return _ResourceTypeID;
            }
            set
            {
                OnResourceTypeIDChanging(value);
                ReportPropertyChanging("ResourceTypeID");
                _ResourceTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceTypeID");
                OnResourceTypeIDChanged();
            }
        }
        private global::System.Int64 _ResourceTypeID;
        partial void OnResourceTypeIDChanging(global::System.Int64 value);
        partial void OnResourceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResourceName
        {
            get
            {
                return _ResourceName;
            }
            set
            {
                OnResourceNameChanging(value);
                ReportPropertyChanging("ResourceName");
                _ResourceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResourceName");
                OnResourceNameChanged();
            }
        }
        private global::System.String _ResourceName;
        partial void OnResourceNameChanging(global::System.String value);
        partial void OnResourceNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WinterEngineDatabaseModel", Name="ResourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceType object.
        /// </summary>
        /// <param name="resourceTypeID">Initial value of the ResourceTypeID property.</param>
        /// <param name="resourceName">Initial value of the ResourceName property.</param>
        public static ResourceType CreateResourceType(global::System.Int64 resourceTypeID, global::System.String resourceName)
        {
            ResourceType resourceType = new ResourceType();
            resourceType.ResourceTypeID = resourceTypeID;
            resourceType.ResourceName = resourceName;
            return resourceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ResourceTypeID
        {
            get
            {
                return _ResourceTypeID;
            }
            set
            {
                if (_ResourceTypeID != value)
                {
                    OnResourceTypeIDChanging(value);
                    ReportPropertyChanging("ResourceTypeID");
                    _ResourceTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceTypeID");
                    OnResourceTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _ResourceTypeID;
        partial void OnResourceTypeIDChanging(global::System.Int64 value);
        partial void OnResourceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResourceName
        {
            get
            {
                return _ResourceName;
            }
            set
            {
                OnResourceNameChanging(value);
                ReportPropertyChanging("ResourceName");
                _ResourceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResourceName");
                OnResourceNameChanged();
            }
        }
        private global::System.String _ResourceName;
        partial void OnResourceNameChanging(global::System.String value);
        partial void OnResourceNameChanged();

        #endregion

    
    }

    #endregion

    
}
